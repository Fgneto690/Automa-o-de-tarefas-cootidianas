{"files":[{"id":"d4ca400d-fe1b-419c-970c-20fc91354cc7","name":"appsscript","type":"json","source":"{\n  \"timeZone\": \"America/Fortaleza\",\n  \"dependencies\": {\n  },\n  \"exceptionLogging\": \"STACKDRIVER\",\n  \"runtimeVersion\": \"V8\"\n}"},{"id":"7489359d-ae75-47bf-b57d-1e92c66f65f9","name":"Código","type":"server_js","source":"// O que faz o código? Filtra e cria uma nova planilha para cada variavel \n// Como usar: Abra o google Sheets na planilha que deseja - va em exntensões - google apps - cole o código - substitua as inf - e execute\nfunction exportSchoolsToFolderWithFinalFormatting() {\n  const ss \u003d SpreadsheetApp.getActiveSpreadsheet();\n  const sheet \u003d ss.getSheetByName(\"Nome da página da planilha\");\n  const dataRange \u003d sheet.getDataRange();\n  const data \u003d dataRange.getValues();\n\n  const header \u003d data.slice(0, 2); // Captura as duas primeiras linhas como cabeçalhos\n  const schools \u003d [...new Set(data.slice(2).map(row \u003d\u003e row[0]))]; // Lista única de escolas (ignora as linhas de cabeçalho)\n\n  // Cria ou acessa uma pasta para os arquivos exportados\n  const folderName \u003d \"Nome da pasta\";\n  let folder \u003d DriveApp.getFoldersByName(folderName).hasNext()\n    ? DriveApp.getFoldersByName(folderName).next()\n    : DriveApp.createFolder(folderName);\n\n  schools.forEach(school \u003d\u003e {\n    if (school) { // Ignorar entradas vazias\n      const filteredData \u003d header.concat(data.filter(row \u003d\u003e row[0] \u003d\u003d\u003d school)); // Adiciona cabeçalhos e filtra dados da escola\n\n      // Cria uma nova planilha para a escola\n      const newSpreadsheet \u003d SpreadsheetApp.create(school);\n      const newSheet \u003d newSpreadsheet.getSheets()[0];\n\n      // Define os dados na nova planilha\n      const range \u003d newSheet.getRange(1, 1, filteredData.length, filteredData[0].length);\n      range.setValues(filteredData);\n\n      // Copiar formatação da planilha original\n      applyFinalFormatting(sheet, newSheet, filteredData.length, filteredData[0].length);\n\n      // Move o arquivo para a pasta designada\n      const file \u003d DriveApp.getFileById(newSpreadsheet.getId());\n      folder.addFile(file); // Adiciona à pasta correta\n      DriveApp.getRootFolder().removeFile(file); // Remove da pasta raiz do Drive\n\n      // Loga a mensagem de sucesso\n      Logger.log(`${school} foi criada com sucesso.`);\n    }\n  });\n\n  Logger.log(`Exportação concluída! As planilhas foram salvas na pasta \"${folderName}\" no Google Drive.`);\n}\n\n// Função para aplicar formatação final, especificas\nfunction applyFinalFormatting(sourceSheet, targetSheet, numRows, numCols) {\n  const sourceRange \u003d sourceSheet.getRange(1, 1, numRows, numCols);\n  const targetRange \u003d targetSheet.getRange(1, 1, numRows, numCols);\n\n  // Copia cores de fundo\n  targetRange.setBackgrounds(sourceRange.getBackgrounds());\n\n  // Copia bordas completas\n  targetRange.setBorder(true, true, true, true, true, true);\n\n  // Copia fontes\n  targetRange.setFontColors(sourceRange.getFontColors());\n  targetRange.setFontSizes(sourceRange.getFontSizes());\n  targetRange.setFontFamilies(sourceRange.getFontFamilies());\n  targetRange.setFontWeights(sourceRange.getFontWeights());\n  targetRange.setHorizontalAlignments(sourceRange.getHorizontalAlignments());\n\n  // Configura listas suspensas em colunas\n  const sourceDropdownRange \u003d sourceSheet.getRange(\"D3:D\");\n  const dropdownRule \u003d sourceDropdownRange.getDataValidation();\n  if (dropdownRule) {\n    const targetDropdownRange \u003d targetSheet.getRange(3, 11, numRows - 2, 1); // Coluna K\n    targetDropdownRange.setDataValidation(dropdownRule);\n  }\n\n  // Mesclar células da linha 1 de A até D\n  const mergeRange \u003d targetSheet.getRange(1, 1, 1, 4);\n  mergeRange.merge();\n\n  // Ajustar largura das colunas para 300\n  for (let col \u003d 1; col \u003c\u003d numCols; col++) {\n    targetSheet.setColumnWidth(col, 300);\n  }\n}\n"}]}